<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SearchToolStrip.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>